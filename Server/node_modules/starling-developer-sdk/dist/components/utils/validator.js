(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports);
    global.validator = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.minAPIParameterValidator = _exports.minAPIParameterDefintion = _exports.struct = void 0;

  var superstruct = require('superstruct').superstruct;

  var struct = superstruct({
    types: {
      uuid: function uuid(value) {
        return /^[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(value);
      },
      yearMonth: function yearMonth(value) {
        return /^[0-9]{4}-(?:1[0-2]|0[1-9])$/.test(value);
      },
      date: function date(value) {
        return /^[0-9]{4}-(?:1[0-2]|0[1-9])-(?:3[01]|[12]\d|0[1-9])$/.test(value);
      },
      timestamp: function timestamp(value) {
        return /^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\.[0-9]+)?(Z)?$/.test(value);
      }
    }
  });
  _exports.struct = struct;
  var minAPIParameterDefintion = {
    accessToken: 'string',
    apiUrl: 'string'
  };
  _exports.minAPIParameterDefintion = minAPIParameterDefintion;
  var minAPIParameterValidator = struct["interface"](minAPIParameterDefintion);
  _exports.minAPIParameterValidator = minAPIParameterValidator;
});
//# sourceMappingURL=validator.js.map
