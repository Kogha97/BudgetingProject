{"version":3,"sources":["entities/feedItem.js"],"names":["log","FeedItem","options","parameters","Object","assign","getFeedItemsBetweenParameterValidator","apiUrl","accessToken","accountUid","categoryUid","minTransactionTimestamp","maxTransactionTimestamp","url","method","params","headers","getFeedItemParameterValidator","feedItemUid","getFeedItemsChangedSinceParameterValidator","changesSince","struct","minAPIParameterDefintion","module","exports"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport debug from 'debug'\nimport { defaultHeaders } from '../utils/http'\nimport { struct, minAPIParameterDefintion } from '../utils/validator'\n\nconst log = debug('starling:feed-item-service')\n\n/**\n * Service to interact with a customer's feed items\n */\nclass FeedItem {\n  /**\n   * Create a new feed item service\n   * @param {Object} options - configuration parameters\n   */\n  constructor (options) {\n    this.options = options\n  }\n\n  /**\n   * Get feed items created between two timestamps\n   * @param {string} parameters.apiUrl - the API URL\n   * @param {string} parameters.accessToken - the oauth bearer token\n   * @param {string} parameters.accountUid - the account uid\n   * @param {string} parameters.categoryUid - the category uid\n   * @param {string} parameters.minTransactionTimestamp - timestamp e.g. '2019-10-25T12:34:56.789Z'\n   * @param {string} parameters.maxTransactionTimestamp - timestamp e.g. '2019-10-26T12:34:56.789Z'\n   * @return {Promise} - the http request promise\n   */\n  getFeedItemsBetween (parameters) {\n    parameters = Object.assign({}, this.options, parameters)\n    getFeedItemsBetweenParameterValidator(parameters)\n    const { apiUrl, accessToken, accountUid, categoryUid, minTransactionTimestamp, maxTransactionTimestamp } = parameters\n\n    const url = `${apiUrl}/api/v2/feed/account/${accountUid}/category/${categoryUid}/transactions-between`\n    log(`GET ${url}`)\n\n    return axios({\n      method: 'GET',\n      url,\n      params: {\n        minTransactionTimestamp,\n        maxTransactionTimestamp\n      },\n      headers: defaultHeaders(accessToken)\n    })\n  }\n\n  /**\n   * Get a feed item\n   * @param {string} parameters.apiUrl - the API URL\n   * @param {string} parameters.accessToken - the oauth bearer token\n   * @param {string} parameters.accountUid - the account uid\n   * @param {string} parameters.categoryUid - the category uid\n   * @param {string} parameters.feedItemUid - the feed item uid\n   * @return {Promise} - the http request promise\n   */\n  getFeedItem (parameters) {\n    parameters = Object.assign({}, this.options, parameters)\n    getFeedItemParameterValidator(parameters)\n    const { apiUrl, accessToken, accountUid, categoryUid, feedItemUid } = parameters\n\n    const url = `${apiUrl}/api/v2/feed/account/${accountUid}/category/${categoryUid}/${feedItemUid}`\n    log(`GET ${url}`)\n\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    })\n  }\n\n  /**\n   * Get feed items created or updated since a given timestamp\n   * @param {string} parameters.apiUrl - the API URL\n   * @param {string} parameters.accessToken - the oauth bearer token\n   * @param {string} parameters.accountUid - the account uid\n   * @param {string} parameters.categoryUid - the category uid\n   * @param {string} parameters.changesSince - timestamp e.g. '2019-10-25T12:34:56.789Z'\n   * @return {Promise} - the http request promise\n   */\n  getFeedItemsChangedSince (parameters) {\n    parameters = Object.assign({}, this.options, parameters)\n    getFeedItemsChangedSinceParameterValidator(parameters)\n    const { apiUrl, accessToken, accountUid, categoryUid, changesSince } = parameters\n\n    const url = `${apiUrl}/api/v2/feed/account/${accountUid}/category/${categoryUid}`\n    log(`GET ${url}`)\n\n    return axios({\n      method: 'GET',\n      url,\n      params: {\n        changesSince\n      },\n      headers: defaultHeaders(accessToken)\n    })\n  }\n}\n\nconst getFeedItemsBetweenParameterValidator = struct.interface({\n  ...minAPIParameterDefintion,\n  accountUid: 'uuid',\n  categoryUid: 'uuid',\n  minTransactionTimestamp: 'timestamp',\n  maxTransactionTimestamp: 'timestamp'\n})\n\nconst getFeedItemParameterValidator = struct.interface({\n  ...minAPIParameterDefintion,\n  accountUid: 'uuid',\n  categoryUid: 'uuid',\n  feedItemUid: 'uuid'\n})\n\nconst getFeedItemsChangedSinceParameterValidator = struct.interface({\n  ...minAPIParameterDefintion,\n  accountUid: 'uuid',\n  categoryUid: 'uuid',\n  changesSince: 'timestamp'\n})\n\nmodule.exports = FeedItem\n"],"file":"feedItem.js"}