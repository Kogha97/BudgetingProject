{"version":3,"sources":["entities/address.js"],"names":["log","Address","options","parameters","Object","assign","apiUrl","accessToken","url","method","headers","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,MAAMA,GAAG,GAAG,uBAAM,0BAAN,CAAZ;AAEA;;;;MAGMC,O;AACJ;;;;AAIA,qBAAaC,OAAb,EAAsB;AAAA;;AACpB,WAAKA,OAAL,GAAeA,OAAf;AACD;AAED;;;;;;;;;;mCAMcC,U,EAAY;AACxBA,QAAAA,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKH,OAAvB,EAAgCC,UAAhC,CAAb;AACA,iDAAyBA,UAAzB;AAFwB,0BAGQA,UAHR;AAAA,YAGhBG,MAHgB,eAGhBA,MAHgB;AAAA,YAGRC,WAHQ,eAGRA,WAHQ;AAKxB,YAAMC,GAAG,aAAMF,MAAN,sBAAT;AACAN,QAAAA,GAAG,eAAQQ,GAAR,EAAH;AAEA,eAAO,uBAAM;AACXC,UAAAA,MAAM,EAAE,KADG;AAEXD,UAAAA,GAAG,EAAHA,GAFW;AAGXE,UAAAA,OAAO,EAAE,0BAAeH,WAAf;AAHE,SAAN,CAAP;AAKD;;;;;;AAGHI,EAAAA,MAAM,CAACC,OAAP,GAAiBX,OAAjB","sourcesContent":["import axios from 'axios'\nimport debug from 'debug'\nimport { defaultHeaders } from '../utils/http'\nimport { minAPIParameterValidator } from '../utils/validator'\n\nconst log = debug('starling:address-service')\n\n/**\n * Service to interact with a customer address\n */\nclass Address {\n  /**\n   * Creates an instance of the address client\n   * @param {Object} options - configuration parameters\n   */\n  constructor (options) {\n    this.options = options\n  }\n\n  /**\n   * Retrieves a customer's address\n   * @param {string} parameters.apiUrl - the API URL\n   * @param {string} parameters.accessToken - the oauth bearer token.\n   * @return {Promise} - the http request promise\n   */\n  getAddresses (parameters) {\n    parameters = Object.assign({}, this.options, parameters)\n    minAPIParameterValidator(parameters)\n    const { apiUrl, accessToken } = parameters\n\n    const url = `${apiUrl}/api/v2/addresses`\n    log(`GET ${url}`)\n\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    })\n  }\n}\n\nmodule.exports = Address\n"],"file":"address.js"}