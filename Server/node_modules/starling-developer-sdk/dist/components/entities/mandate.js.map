{"version":3,"sources":["entities/mandate.js"],"names":["log","Mandate","options","parameters","Object","assign","apiUrl","accessToken","url","method","headers","getMandateParameterValidator","mandateUid","deleteMandateParameterValidator","struct","minAPIParameterDefintion","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,MAAMA,GAAG,GAAG,uBAAM,0BAAN,CAAZ;AAEA;;;;MAGMC,O;AACJ;;;;AAIA,qBAAaC,OAAb,EAAsB;AAAA;;AACpB,WAAKA,OAAL,GAAeA,OAAf;AACD;AAED;;;;;;;;;;mCAMcC,U,EAAY;AACxBA,QAAAA,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKH,OAAvB,EAAgCC,UAAhC,CAAb;AACA,iDAAyBA,UAAzB;AAFwB,0BAGQA,UAHR;AAAA,YAGhBG,MAHgB,eAGhBA,MAHgB;AAAA,YAGRC,WAHQ,eAGRA,WAHQ;AAKxB,YAAMC,GAAG,aAAMF,MAAN,kCAAT;AACAN,QAAAA,GAAG,eAAQQ,GAAR,EAAH;AAEA,eAAO,uBAAM;AACXC,UAAAA,MAAM,EAAE,KADG;AAEXD,UAAAA,GAAG,EAAHA,GAFW;AAGXE,UAAAA,OAAO,EAAE,0BAAeH,WAAf;AAHE,SAAN,CAAP;AAKD;AAED;;;;;;;;;;iCAOYJ,U,EAAY;AACtBA,QAAAA,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKH,OAAvB,EAAgCC,UAAhC,CAAb;AACAQ,QAAAA,4BAA4B,CAACR,UAAD,CAA5B;AAFsB,2BAGsBA,UAHtB;AAAA,YAGdG,MAHc,gBAGdA,MAHc;AAAA,YAGNC,WAHM,gBAGNA,WAHM;AAAA,YAGOK,UAHP,gBAGOA,UAHP;AAKtB,YAAMJ,GAAG,aAAMF,MAAN,2CAA6CM,UAA7C,CAAT;AACAZ,QAAAA,GAAG,eAAQQ,GAAR,EAAH;AAEA,eAAO,uBAAM;AACXC,UAAAA,MAAM,EAAE,KADG;AAEXD,UAAAA,GAAG,EAAHA,GAFW;AAGXE,UAAAA,OAAO,EAAE,0BAAeH,WAAf;AAHE,SAAN,CAAP;AAKD;AAED;;;;;;;;;;oCAOeJ,U,EAAY;AACzBA,QAAAA,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKH,OAAvB,EAAgCC,UAAhC,CAAb;AACAU,QAAAA,+BAA+B,CAACV,UAAD,CAA/B;AAFyB,2BAGmBA,UAHnB;AAAA,YAGjBG,MAHiB,gBAGjBA,MAHiB;AAAA,YAGTC,WAHS,gBAGTA,WAHS;AAAA,YAGIK,UAHJ,gBAGIA,UAHJ;AAKzB,YAAMJ,GAAG,aAAMF,MAAN,2CAA6CM,UAA7C,CAAT;AACAZ,QAAAA,GAAG,kBAAWQ,GAAX,EAAH;AAEA,eAAO,uBAAM;AACXC,UAAAA,MAAM,EAAE,QADG;AAEXD,UAAAA,GAAG,EAAHA,GAFW;AAGXE,UAAAA,OAAO,EAAE,0BAAeH,WAAf;AAHE,SAAN,CAAP;AAKD;;;;;;AAGH,MAAMI,4BAA4B,GAAGG,+DAChCC,mCADgC;AAEnCH,IAAAA,UAAU,EAAE;AAFuB,KAArC;;AAKA,MAAMC,+BAA+B,GAAGC,+DACnCC,mCADmC;AAEtCH,IAAAA,UAAU,EAAE;AAF0B,KAAxC;;AAKAI,EAAAA,MAAM,CAACC,OAAP,GAAiBhB,OAAjB","sourcesContent":["import axios from 'axios'\nimport debug from 'debug'\nimport { defaultHeaders } from '../utils/http'\nimport { struct, minAPIParameterDefintion, minAPIParameterValidator } from '../utils/validator'\n\nconst log = debug('starling:mandate-service')\n\n/**\n * Service to interact with a customer's mandates\n */\nclass Mandate {\n  /**\n   * Create a new mandate service\n   * @param {Object} options - configuration parameters\n   */\n  constructor (options) {\n    this.options = options\n  }\n\n  /**\n   * Gets a list of the customer's current direct debit mandates\n   * @param {string} parameters.apiUrl - the API URL\n   * @param {string} parameters.accessToken - the oauth bearer token\n   * @return {Promise} - the http request promise\n   */\n  listMandates (parameters) {\n    parameters = Object.assign({}, this.options, parameters)\n    minAPIParameterValidator(parameters)\n    const { apiUrl, accessToken } = parameters\n\n    const url = `${apiUrl}/api/v2/direct-debit/mandates`\n    log(`GET ${url}`)\n\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    })\n  }\n\n  /**\n   * Gets a specific direct debit mandate\n   * @param {string} parameters.apiUrl - the API URL\n   * @param {string} parameters.accessToken - the oauth bearer token\n   * @param {string} parameters.mandateUid - unique identifier of the mandate\n   * @return {Promise} - the http request promise\n   */\n  getMandate (parameters) {\n    parameters = Object.assign({}, this.options, parameters)\n    getMandateParameterValidator(parameters)\n    const { apiUrl, accessToken, mandateUid } = parameters\n\n    const url = `${apiUrl}/api/v2/direct-debit/mandates/${mandateUid}`\n    log(`GET ${url}`)\n\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    })\n  }\n\n  /**\n   * Deletes specific direct debit mandate\n   * @param {string} parameters.apiUrl - the API URL\n   * @param {string} parameters.accessToken - the oauth bearer token.\n   * @param {string} parameters.mandateUid - the unique mandate ID\n   * @return {Promise} - the http request promise\n   */\n  deleteMandate (parameters) {\n    parameters = Object.assign({}, this.options, parameters)\n    deleteMandateParameterValidator(parameters)\n    const { apiUrl, accessToken, mandateUid } = parameters\n\n    const url = `${apiUrl}/api/v2/direct-debit/mandates/${mandateUid}`\n    log(`DELETE ${url}`)\n\n    return axios({\n      method: 'DELETE',\n      url,\n      headers: defaultHeaders(accessToken)\n    })\n  }\n}\n\nconst getMandateParameterValidator = struct.interface({\n  ...minAPIParameterDefintion,\n  mandateUid: 'uuid'\n})\n\nconst deleteMandateParameterValidator = struct.interface({\n  ...minAPIParameterDefintion,\n  mandateUid: 'uuid'\n})\n\nmodule.exports = Mandate\n"],"file":"mandate.js"}