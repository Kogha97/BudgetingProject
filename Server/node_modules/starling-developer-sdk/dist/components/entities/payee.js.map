{"version":3,"sources":["entities/payee.js"],"names":["log","Payee","options","parameters","Object","assign","apiUrl","accessToken","url","method","headers","createPayeeParameterValidator","payeeCreationRequest","data","JSON","stringify","deletePayeeParameterValidator","payeeUid","struct","minAPIParameterDefintion","object","payeeName","phoneNumber","payeeType","firstName","middleName","lastName","businessName","dateOfBirth","accounts","optional","description","defaultAccount","countryCode","accountIdentifier","bankIdentifier","bankIdentifierType","module","exports"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport debug from 'debug'\nimport { defaultHeaders, payloadHeaders } from '../utils/http'\nimport { struct, minAPIParameterDefintion, minAPIParameterValidator } from '../utils/validator'\n\nconst log = debug('starling:payee-service')\n\n/**\n * Service to interact with an account holder's payees\n */\nclass Payee {\n  /**\n   * Create a new payee service\n   * @param {Object} options - configuration parameters\n   */\n  constructor (options) {\n    this.options = options\n  }\n\n  /**\n   * Get an account holder's payees\n   * @param {string} parameters.apiUrl - the API URL\n   * @param {string} parameters.accessToken - the oauth bearer token.\n   * @return {Promise} - the http request promise\n   */\n  getPayees (parameters) {\n    parameters = Object.assign({}, this.options, parameters)\n    minAPIParameterValidator(parameters)\n    const { apiUrl, accessToken } = parameters\n\n    const url = `${apiUrl}/api/v2/payees`\n    log(`GET ${url}`)\n\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    })\n  }\n\n  /**\n   * Create a new payee\n   * @param {string} parameters.apiUrl - the API URL\n   * @param {string} parameters.accessToken - the oauth bearer token.\n   * @param {Object} parameters.payeeCreationRequest - the payee creation request.\n   * @return {Promise} - the http request promise\n   */\n  createPayee (parameters) {\n    parameters = Object.assign({}, this.options, parameters)\n    createPayeeParameterValidator(parameters)\n    const { apiUrl, accessToken, payeeCreationRequest } = parameters\n\n    const url = `${apiUrl}/api/v2/payees`\n    log(`PUT ${url}`)\n    return axios({\n      method: 'PUT',\n      url,\n      headers: payloadHeaders(accessToken),\n      data: JSON.stringify(payeeCreationRequest)\n    })\n  }\n\n  /**\n   * Delete an account holder's payee\n   * @param {string} parameters.apiUrl - the API URL\n   * @param {string} parameters.accessToken - the oauth bearer token.\n   * @param {string} parameters.payeeUid - the payeeUid of the payee to be deleted.\n   * @return {Promise} - the http request promise\n   */\n  deletePayee (parameters) {\n    parameters = Object.assign({}, this.options, parameters)\n    deletePayeeParameterValidator(parameters)\n    const { apiUrl, accessToken, payeeUid } = parameters\n\n    const url = `${apiUrl}/api/v2/payees/${payeeUid}`\n    log(`DELETE ${url}`)\n    return axios({\n      method: 'DELETE',\n      url,\n      headers: defaultHeaders(accessToken)\n    })\n  }\n}\n\nconst createPayeeParameterValidator = struct.interface({\n  ...minAPIParameterDefintion,\n  payeeCreationRequest: struct.object({\n    payeeName: 'string',\n    phoneNumber: 'string?',\n    payeeType: struct.enum(['INDIVIDUAL', 'BUSINESS']),\n    firstName: 'string?',\n    middleName: 'string?',\n    lastName: 'string?',\n    businessName: 'string?',\n    dateOfBirth: 'date?',\n    accounts: struct.optional([struct.object({\n      description: 'string',\n      defaultAccount: 'boolean',\n      countryCode: 'string',\n      accountIdentifier: 'string',\n      bankIdentifier: 'string',\n      bankIdentifierType: struct.enum(['SORT_CODE', 'SWIFT', 'IBAN', 'ABA', 'ABA_WIRE', 'ABA_ACH'])\n    })])\n  })\n})\n\nconst deletePayeeParameterValidator = struct.interface({\n  ...minAPIParameterDefintion,\n  payeeUid: 'uuid'\n})\n\nmodule.exports = Payee\n"],"file":"payee.js"}